'GW',
'GY',
'HT',
'HM',
'VA',
'HN',
'HU',
'IS',
'IN',
'ID',
'IR',
'IQ',
'IE',
'IM',
'IL',
'IT',
'JM',
'JP',
'JE',
'JO',
'KZ',
'KE',
'KI',
'KP',
'KR',
'KW',
'KG',
'LA',
'LV',
'LB',
'LS',
'LR',
'LY',
'LI',
'LT',
'LU',
'MK',
'MG',
'MW',
'MY',
'MV',
'ML',
'MT',
'MH',
'MQ',
'MR',
'MU',
'YT',
'MX',
'FM',
'MD',
'MC',
'MN',
'ME',
'MS',
'MA',
'MZ',
'MM',
'NA',
'NR',
'NP',
'NL',
'AN',
'NC',
'NZ',
'NI',
'NE',
'NG',
'NU',
'NF',
'MP',
'NO',
'OM',
'PK',
'PW',
'PS',
'PA',
'PG',
'PY',
'PE',
'PH',
'PN',
'PL',
'PT',
'PR',
'QA',
'RE',
'RO',
'RU',
'RW',
'BL',
'SH',
'KN',
'LC',
'MF',
'PM',
'VC',
'WS',
'SM',
'ST',
'SA',
'SN',
'RS',
'SC',
'SL',
'SG',
'SK',
'SI',
'SB',
'SO',
'ZA',
'GS',
'SS',
'ES',
'LK',
'SD',
'SR',
'SJ',
'SZ',
'SE',
'CH',
'SY',
'TW',
'TJ',
'TZ',
'TH',
'TL',
'TG',
'TK',
'TO',
'TT',
'TN',
'TR',
'TM',
'TC',
'TV',
'UG',
'UA',
'AE',
'GB',
'US',
'UM',
'UY',
'UZ',
'VU',
'VE',
'VN',
'VI',
'WF',
'EH',
'YE',
'ZM',
'ZW'
)
COUNTRIES <- data.frame(name=countries.name, acronyms=countries.acronyms)
lockBinding("COUNTRIES", globalenv())
rm(countries.name, countries.acronyms)
COUNTRIES
COUNTRIES$name
as.character(COUNTRIES$name)
#teaser <- 'A MET detective investigates a mysterious party which occurs in a London suburb. His only hope is that he can save the lives (even if they are dead already) of those inside before time runs out'
teaser <- 'John and Amarildo were the best of friends growing up, but when their relationship changes for the worse things head south.'
#teaser <- gsub('[^[:alpha:]|^[:blank:]]', '', teaser)
teaser <- unlist(strsplit(gsub(' +', ' ', teaser), ' '))
teaser <- teaser[grep("^[A-Z]",teaser)]
teaser <- unlist(lapply(teaser, function(x) ifelse(!tolower(x) %in% black.list, x, NA)))
teaser <- teaser[!is.na(teaser)]
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
#teaser <- 'A MET detective investigates a mysterious party which occurs in a London suburb. His only hope is that he can save the lives (even if they are dead already) of those inside before time runs out'
teaser <- 'John and Amarildo were the best of friends growing up, but when their relationship changes for the worse things head south.'
#teaser <- gsub('[^[:alpha:]|^[:blank:]]', '', teaser)
teaser <- unlist(strsplit(gsub(' +', ' ', teaser), ' '))
teaser <- teaser[grep("^[A-Z]",teaser)]
teaser <- unlist(lapply(teaser, function(x) ifelse(!tolower(x) %in% black.list, x, NA)))
teaser <- teaser[!is.na(teaser)]
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"cities\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
#teaser <- 'A MET detective investigates a mysterious party which occurs in a London suburb. His only hope is that he can save the lives (even if they are dead already) of those inside before time runs out'
teaser <- 'John and Amarildo were the best of friends growing up, but when their relationship changes for the worse things head south.'
#teaser <- gsub('[^[:alpha:]|^[:blank:]]', '', teaser)
teaser <- unlist(strsplit(gsub(' +', ' ', teaser), ' '))
teaser <- teaser[grep("^[A-Z]",teaser)]
teaser <- unlist(lapply(teaser, function(x) ifelse(!tolower(x) %in% black.list, x, NA)))
teaser <- teaser[!is.na(teaser)]
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"city\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"home\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"+\"home\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"cities\"+\"home\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
print(f)
print((vector %>% closest_to(f))$word[1:20])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
print(intersect((vector %>% closest_to(f))$word[1:20], as.character(COUNTRIES$name)))
}
result = c()
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
result = union(result, intersect((vector %>% closest_to(f))$word[1:20], as.character(COUNTRIES$name)))
}
print(result)
teaser <- 'A MET detective investigates a mysterious party which occurs in a London suburb. His only hope is that he can save the lives (even if they are dead already) of those inside before time runs out'
#teaser <- 'John and Amarildo were the best of friends growing up, but when their relationship changes for the worse things head south.'
#teaser <- gsub('[^[:alpha:]|^[:blank:]]', '', teaser)
teaser <- unlist(strsplit(gsub(' +', ' ', teaser), ' '))
teaser <- teaser[grep("^[A-Z]",teaser)]
teaser <- unlist(lapply(teaser, function(x) ifelse(!tolower(x) %in% black.list, x, NA)))
teaser <- teaser[!is.na(teaser)]
result = c()
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
result = union(result, intersect((vector %>% closest_to(f))$word[1:20], as.character(COUNTRIES$name)))
}
print(result)
result = data.frame(country=c(), weight=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
print(which(intersect((vector %>% closest_to(f))$word[1:20], as.character(COUNTRIES$name))))
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
print(which((vector %>% closest_to(f))$word[1:20] %in% as.character(COUNTRIES$name)))
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
print(str(closest))
return()
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
print(closest$word[index])
print(closest$[index])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
print(str(closest))
return()
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
print(closest$word[index])
print(closest$[index])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
print(str(closest))
return()
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
print(closest$word[index])
#print(closest$[index])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
print(str(closest))
return()
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
print(closest$word[index])
print(closest$similarity[index])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
print(closest$word[index])
print(closest$similarity[index])
}
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(data.frame(closest$word[index]), closest$similarity[index])
}
print(result)
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(data.frame(country=closest$word[index]), weight=closest$similarity[index])
}
print(result)
result = data.frame(country=c(), weight=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(data.frame(country=closest$word[index]), weight=closest$similarity[index])
}
print(result)
result = data.frame(country=c(), weight=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index]), weight=closest$similarity[index])
}
print(result)
result = data.frame(country=c(), weight=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], weight=closest$similarity[index]))
}
print(result)
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[order(similarity)])
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[order(result$similarity)])
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[order(-result$similarity)])
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[-order(result$similarity)])
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[order(-result$similarity,)])
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[order(-result$similarity),])
#teaser <- 'A MET detective investigates a mysterious party which occurs in a London suburb. His only hope is that he can save the lives (even if they are dead already) of those inside before time runs out'
teaser <- 'John and Amarildo were the best of friends growing up, but when their relationship changes for the worse things head south.'
#teaser <- gsub('[^[:alpha:]|^[:blank:]]', '', teaser)
teaser <- unlist(strsplit(gsub(' +', ' ', teaser), ' '))
teaser <- teaser[grep("^[A-Z]",teaser)]
teaser <- unlist(lapply(teaser, function(x) ifelse(!tolower(x) %in% black.list, x, NA)))
teaser <- teaser[!is.na(teaser)]
result = data.frame(country=c(), similarity=c())
for (word in teaser) {
f <- paste("~", "\"", word, "\"+", sep="")
f <- as.formula(paste(f, "\"countries\"", sep=""))
closest <- (vector %>% closest_to(f))
index <- which(closest$word[1:20] %in% as.character(COUNTRIES$name))
result <- rbind(result, data.frame(country=closest$word[index], similarity=closest$similarity[index]))
}
print(result[order(-result$similarity),])
library(ggplot2)
setwd("/home/lucas/git/linefollower-arduino/")
install.packages("ggplot2")
library(ggplot2)
read.csv("data/pwm_angle.csv")
str(read.csv("data/pwm_angle.csv"))
str(read.csv("data/pwm_angle.csv"))
str(read.csv("data/pwm_angle.csv"))
data = read.csv("data/pwm_angle.csv")
lm(pwm ~ anglem, data)
lm(pwm ~ angle, data)
lm(pwm ~ graus, data)
ggoplot(data, aes(graus, pwm)) + geom_line()
ggplot(data, aes(graus, pwm)) + geom_line()
lm(pwm ~ graus, data)
data = read.csv("data/pwm_angle.csv")
lm(pwm ~ degree, data)
ggplot(data(degree, pwdFromDegree(degree))) + geom_line()
pwdFromDegree <- function(degree) 27.6527 + 27.6527 * degree
ggplot(data(degree, pwdFromDegree(degree))) + geom_line()
data$f <- pwdFromDegree(data$degree)
ggplot(data(degree, f)) + geom_line()
ggplot(data, aes(degree, f)) + geom_line()
ggplot(data, aes(degree, pwm)) + geom_line()
ggplot(data) + geom_line(aes(degree, pwm))
+ geom_line(aes(degree, f))
ggplot(data) + geom_line(aes(degree, pwm)) +
geom_line(aes(degree, f))
data$f <- pwdFromDegree(data$pwm)
ggplot(data) + geom_line(aes(degree, pwm)) +
geom_line(aes(degree, f))
lm(pwm ~ degree, data)
pwdFromDegree <- function(degree) 27.6527 + 0.5251 * degree
data$f <- pwdFromDegree(data$pwm)
data$f <- pwdFromDegree(data$degree)
ggplot(data) + geom_line(aes(degree, pwm)) +
geom_line(aes(degree, f))
lm(degree ~ pwm, data)
degreeFromPwm function(pwm) -46.831 + 1.856 * pwm
degreeFromPwm <- function(pwm) -46.831 + 1.856 * pwm
data$g <- degreeFromPwm(data$pwd)
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(degree, g))
degreeFromPwm <- function(pwm) -46.831 + 1.856 * pwm
data$g <- degreeFromPwm(data$pwd)
data$pwd
data = read.csv("data/pwm_angle.csv")
data$pwd
data$g <- degreeFromPwm(data$pwm)
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(degree, g))
ggplot(data) + geom_line(aes(pwm, degree))
ggplot(data) +
geom_line(aes(degree, g))
lm(degree ~ pwm, data)
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(degree, g))
data$g <- degreeFromPwm(data$pwm)
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(g, degree))
data$g <- degreeFromPwm(data$pwm)
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(g, degree))
ggplot(data) + geom_line(aes(pwm, degree))
ggplot(data) +
geom_line(aes(g, degree))
ggplot(data) + geom_line(aes(pwm, degree))
ggplot(data) +
geom_line(aes(g, degree))
ggplot(data) + geom_line(aes(pwm, degree))
ggplot(data) +
data$pwm
data$pwm
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(g, degree))
data$pwm
data$g
data$pwm
data$g
data$g <- degreeFromPwm(data$pwm)
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(pwm, g))
ggplot(data) + geom_line(aes(degree, pwm)) +
geom_line(aes(degree, f))
data$f <- pwdFromDegree(data$degree)
ggplot(data) + geom_line(aes(degree, pwm)) +
geom_line(aes(degree, f))
ggplot(data) + geom_line(aes(pwm, degree)) +
geom_line(aes(pwm, g))
ggplot(data) + geom_line(aes(degree, pwm)) +
geom_line(aes(degree, f))
